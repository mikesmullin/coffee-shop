// Generated by CoffeeScript 1.4.0
var CoffeeShop, sig, string, word, y,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

y = function(v) {
  return (typeof v)[0];
};

sig = function(a) {
  var k, s;
  s = '';
  for (k in a) {
    s += y(a[k]);
  }
  return s;
};

string = function(a) {
  return a.length === 1 && sig(a) === 's';
};

word = function(a) {
  return string(a) && a[0].match(/^\w+$/) !== null;
};

module.exports = CoffeeShop = (function() {

  function CoffeeShop() {}

  CoffeeShop.Table = (function() {

    function _Class(name) {
      this.name = name;
      this._select = [];
      this._joins = [];
      this._where = [];
      this._group = [];
      this._having = [];
      this._order = [];
      this._limit = 0;
      this._offset = 0;
    }

    _Class.prototype.select = function() {
      var a;
      a = arguments;
      if (string(a)) {
        this._select.push(a[0]);
      } else if (a.length > 1) {
        this._select = this._select.concat(a);
      }
      return this;
    };

    _Class.prototype.joins = function() {
      var a;
      a = arguments;
      if (word(a || a.length > 1)) {
        this._joins.push(a[0]);
      } else if (string(a)) {
        this._joins.push(a[0]);
      }
      return this;
    };

    _Class.prototype.where = function() {
      return this;
    };

    _Class.prototype.group = function() {
      var a;
      a = arguments;
      if (string(a)) {
        this._group.push(a[0]);
      } else if (a.length > 1) {
        this._group = this._group.concat(a);
      }
      return this;
    };

    _Class.prototype.having = function() {
      var a;
      a = arguments;
      if (string(a)) {
        this._having.push(a[0]);
      } else if (a.length > 1) {
        this._having = this._having.concat(a);
      }
      return this;
    };

    _Class.prototype.order = function() {
      var a;
      a = arguments;
      if (string(a)) {
        this._order.push(a[0]);
      } else if (a.length > 1) {
        this._order = this._order.concat(a);
      }
      return this;
    };

    _Class.prototype.limit = function(_limit) {
      this._limit = _limit;
      return this;
    };

    _Class.prototype.offset = function(_offset) {
      this._offset = _offset;
      return this;
    };

    _Class.prototype.toString = function() {
      return this.toSql();
    };

    _Class.prototype.toSql = function() {
      var sql;
      return sql = '' + ("SELECT\n " + (this._select.join(",\n ")) + "\n") + ("FROM " + this._table + "\n") + this._joins.join("\n") + (this._group.length ? "GROUP BY " + (this._group.join(', ')) + "\n" : '') + (this._order.length ? "ORDER BY " + (this._order.join(', ')) + "\n" : '') + (this._having.length ? "HAVING " + (this._having.join(', ')) + "\n" : '') + (this._limit ? "LIMIT " + this._limit + "\n" : '') + (this._offset ? "OFFSET " + this._offset + "\n" : '') + ';';
    };

    return _Class;

  })();

  CoffeeShop.Model = (function(_super) {

    __extends(_Class, _super);

    function _Class() {
      console.log("hi. table is " + this._table);
      console.log("has_ones: " + (this._has_one.join(', ')));
      _Class.__super__.constructor.call(this);
    }

    _Class.prototype.table = function(_table) {
      this._table = _table;
    };

    _Class.prototype._has_one = [];

    _Class.prototype.has_one = function(s) {
      return this._has_one.push(s);
    };

    _Class.prototype.has_many = function() {};

    _Class.prototype.has_and_belongs_to_many = function() {};

    _Class.prototype.belongs_to = function() {};

    _Class.prototype.serialize = function() {};

    _Class.prototype.attr_accesible = function() {};

    _Class.prototype.validates_presence_of = function() {};

    _Class.prototype.execute_sql = function(sql, cb) {
      return app.db.exec(sql, cb);
    };

    _Class.prototype.find = function(id, cb) {
      this.where({
        id: id
      });
      return this.execute_sql(this.toSql(), cb);
    };

    _Class.prototype.all = function() {};

    _Class.prototype.first = function() {};

    _Class.prototype.last = function() {};

    _Class.prototype.save = function() {};

    return _Class;

  })(CoffeeShop.Table);

  return CoffeeShop;

})();
